-- Create roles and permissions system

-- Custom types
create type public.app_role as enum (
  'agent',
  'admin'
);

create type public.organization_permission_type as enum (
  'mobilizing_partners',
  'mission_partners', 
  'reward_partners',
  'cin_administrators'
);

-- USER ROLES
create table public.user_roles (
  id              bigint generated by default as identity primary key,
  user_id         uuid references auth.users on delete cascade not null,
  role            app_role not null,
  organization_id uuid references public.organizations on delete cascade,
  created_at      timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at      timestamp with time zone default timezone('utc'::text, now()) not null,
  unique (user_id, role, organization_id)
);
comment on table public.user_roles is 'Application roles for each user, optionally scoped to an organization.';

-- ORGANIZATION PERMISSIONS
create table public.organization_permissions (
  id bigint generated by default as identity primary key,
  organization_id uuid references public.organizations(id) on delete cascade not null,
  permission_type organization_permission_type not null,
  status text default 'pending' check (status in ('pending', 'approved', 'rejected')),
  requested_by uuid references auth.users(id) not null,
  reviewed_by uuid references auth.users(id),
  reviewed_at timestamp with time zone,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
  unique (organization_id, permission_type)
);
comment on table public.organization_permissions is 'Organization permission requests and approvals for different privileges.';
